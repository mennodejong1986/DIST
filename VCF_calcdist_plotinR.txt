# Commands to plot VCF_calcdist output in R, using SambaR.
# Expects that set of individuals in SambaR (inds dataframe) corresponds with set of individuals analysed with VCF_calcdist function.

# Xue, 2009, Human Y chromosome base-substitution mutation rate measured by direct sequencing in a deep-rooting pedigree.
# y-chrom mutation rate 
# 1.0 × 10^−9 mutations per nucleotide per year or 
# 3.0 × 10^−8 mutations per nucleotide per generation

# MITO:
# Rebolledo-Jaramillo, B. et al. Maternal age effect and severe germ-line bottleneck in the inheritance of human mitochondrial DNA.
# 1.30*10^-8
# Zaidi, A. A. et al. Bottleneck and selection in the germline and maternal age influence transmission of mitochondrial DNA in human pedigrees
# 1.89*10^-8


# example run:
examplerun<-function()
	{
	# SINCE JULY 2022:
	source("E:/PhD/General/SAMBAR/SAMBAR_v1.07.txt")
	add2inds2(myfile="mydistdf.all.txt")
	excludepop(c("polar","Black"))
	pops2scatter(legendcex=1,export="pdf",plottitle="Autosomal",legendpos="topleft",xlabel="Distance (100 km)")
	popfstmantel(logaxis="x",export="pdf")
	mymat	<- df2mat(myscore="d",doheatmap=TRUE,twosided=FALSE)
	#
	# BEFORE JULY 2022:
	source("E:/PhD/General/SAMBAR/SAMBAR_v1.07.txt")
	# mut_rate and gen_time are used only if flag haploid is set to TRUE:
	getpairscores(myfile="vcfdist.1_61.txt",haploid=FALSE,error_rate=0.0001,mut_rate=1.2*10^-8,gen_time=8)
	mymat<-df2mat(mydf=mydistdf,myinds=inds$nr[inds$filter],mypops=inds$pop[inds$filter],myscore="dxy",doheatmap=TRUE,twosided=TRUE)
	#
	# mantelplot:
	hudsonfst()
	dxyfac(dxy=mydistdf,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide",plottitle="X-chromosome",legendpos="topleft",xlabel="Distance (degrees)",ylabel="Dxy (%)")
	dxystripchart(dxydf=mydistdf,export="pdf",addylabel=TRUE,logy=FALSE,mycex=1.75,mytitle="X-chromosome",ymax=NULL,plotwidth=15)
	#
	# optionally generate rough estimates of divergence time:
	# source("E:/PhD/General/Rawdata2snps/VCF_calcdist_plotinR.txt")
	# choose a subset of individuals, otherwise impossible to see the forest through the trees in the output plot:
	# newworldpairs	<<- data.frame("pop1"=as.character(c("Westcoast","Migrant","ABCcoast")),"pop2"=as.character(c("ABCcoast","Kamtchatka","ABCa")))
	# dxyhisto(silent=FALSE,pairdf=newworldpairs,mydf=mydistdf2,export="pdf",plotname="Dxy_NewWorld",xmax=90000)
	}

plotmanteldxy<-function()
	{
	#### X-chromosome:
	source("D:/PhD/General/SAMBAR/SAMBAR_v1.05.txt")
	getdata("brownX_data")
	getpairscores(myfile="xchrom.vcfdist.txt",haploid=FALSE,error_rate=0.0001,mut_rate=1.2*10^-8,gen_time=8)
	dxyfac(dxy=mydistdf,doclades=FALSE,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide",addlines=NULL,usecladecol=FALSE,plottitle="X-chromosome",mylinemat=NULL,mycex=3,myxlim=NULL,axiscex=2,labcex=2.5,maincex=3,xline=4,yline=4.75,addlegend=TRUE,legendpos="topleft",legend2pos="bottomright",legendcex=1.15,vline=NULL,xlabel="Distance (degrees)",ylabel="Dxy (%)",addregression=FALSE)
	dxyfac(dxy=mydistdf,doclades=FALSE,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide",addlines=NULL,usecladecol=FALSE,plottitle="X-chromosome",mylinemat=NULL,mycex=3,myxlim=NULL,axiscex=2,labcex=2.5,maincex=3,xline=4,yline=4.75,addlegend=FALSE,legendpos="topleft",legend2pos="bottomright",legendcex=1.15,vline=NULL,xlabel="Distance (degrees)",ylabel="Dxy (%)",addregression=FALSE)
	dxystripchart(dxydf=mydistdf,export="pdf",addylabel=TRUE,logy=FALSE,mycex=1.75,mytitle="X-chromosome",ymax=NULL,plotwidth=15)
	#
	#### Y-chromosome:
	source("D:/PhD/General/SAMBAR/SAMBAR_v1.05.txt")
	getdata("brownY_data")
	getpairscores(myfile="allvcfdist.noheaders.txt",haploid=TRUE,error_rate=0.0001,mut_rate=1.2*10^-8,gen_time=8)
	dxyfac(dxy=mydistdf,doclades=FALSE,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide",addlines=NULL,usecladecol=FALSE,plottitle="Y-chromosome",mylinemat=NULL,mycex=3,myxlim=NULL,axiscex=2,labcex=2.5,maincex=3,xline=4,yline=4.75,addlegend=TRUE,legendpos="topleft",legend2pos="bottomright",legendcex=1.15,vline=NULL,xlabel="Distance (degrees)",ylabel="Dxy (%)",addregression=FALSE)
	dxyfac(dxy=mydistdf,doclades=FALSE,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide",addlines=NULL,usecladecol=FALSE,plottitle="Y-chromosome",mylinemat=NULL,mycex=3,myxlim=NULL,axiscex=2,labcex=2.5,maincex=3,xline=4,yline=4.75,addlegend=FALSE,legendpos="topleft",legend2pos="bottomright",legendcex=1.15,vline=NULL,xlabel="Distance (degrees)",ylabel="Dxy (%)",addregression=FALSE)
	dxystripchart(dxydf=mydistdf,export="pdf",addylabel=TRUE,logy=FALSE,mycex=1.75,mytitle="Y-chromosome",ymax=NULL,plotwidth=15)
	# without Middle East and Himalayas:
	mydistdf2	<- mydistdf
	mydistdf2$bool1[mydistdf2$pop1=="Himalaya"]		<- FALSE
	mydistdf2$bool2[mydistdf$pop2=="Himalaya"]		<- FALSE
	mydistdf2$bool1[mydistdf2$pop1=="MiddleEast"]	<- FALSE
	mydistdf2$bool2[mydistdf$pop2=="MiddleEast"]	<- FALSE
	dxyfac(dxy=mydistdf2,doclades=FALSE,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide_withoutMiddleEast",addlines=NULL,usecladecol=FALSE,plottitle="Y-chromosome",mylinemat=NULL,mycex=3,myxlim=NULL,axiscex=2,labcex=2.5,maincex=3,xline=4,yline=4.75,addlegend=TRUE,legendpos="topleft",legend2pos="bottomright",legendcex=1.15,vline=NULL,xlabel="Distance (degrees)",ylabel="Dxy (%)",addregression=FALSE)
	#
	#### Autosomal:
	source("E:/PhD/General/SAMBAR/SAMBAR_v1.07.txt")
	getdata("brownauto_data")
	#getpairscores(myfile="allvcfdist.noheaders.txt",haploid=FALSE,error_rate=0.0001,mut_rate=1.2*10^-8,gen_time=8)
	
	dxyfac(dxy=mydistdf,doclades=FALSE,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide",addlines=NULL,usecladecol=FALSE,plottitle="Autosomes",mylinemat=NULL,mycex=3,myxlim=NULL,axiscex=2,labcex=2.5,maincex=3,xline=4,yline=4.75,addlegend=TRUE,legendpos="topleft",legend2pos="bottomright",legendcex=1.15,vline=NULL,xlabel="Distance (degrees)",ylabel="Dxy (%)",addregression=FALSE)
	dxyfac(dxy=mydistdf,doclades=FALSE,dobetween=TRUE,dowithin=FALSE,export="pdf",plotname="Dxy_vs_dist_genomewide",addlines=NULL,usecladecol=FALSE,plottitle="Autosomes",mylinemat=NULL,mycex=3,myxlim=NULL,axiscex=2,labcex=2.5,maincex=3,xline=4,yline=4.75,addlegend=FALSE,legendpos="topleft",legend2pos="bottomright",legendcex=1.15,vline=NULL,xlabel="Distance (degrees)",ylabel="Dxy (%)",addregression=FALSE)
	dxystripchart(dxydf=mydistdf,export="pdf",addylabel=TRUE,logy=FALSE,mycex=1.75,mytitle="Autosomes",ymax=NULL,plotwidth=15)
	}

# TMCRA estimates:
plotdxyhisto<-function()
	{
	# TMCRA estimates:
	source("D:/PhD/General/SAMBAR/SAMBAR_v1.05.txt")
	getdata("brownY_data")
	getpairscores(myfile="allvcfdist.noheaders.txt",haploid=TRUE,error_rate=0.0001,mut_rate=1.2*10^-8,gen_time=8)
		
	mydistdf2	<- mydistdf
	mydistdf2$bool1[as.character(mydistdf2$name1)=="Alaska1"]	<- FALSE
	mydistdf2$bool2[as.character(mydistdf2$name2)=="Alaska1"]	<- FALSE
	mydistdf2$bool1[as.character(mydistdf2$name1)=="ABC1"]		<- FALSE
	mydistdf2$bool2[as.character(mydistdf2$name2)=="ABC1"]		<- FALSE
	
	levels(mydistdf2$pop1) <- c(levels(mydistdf2$pop1),"Migrant","EuropeA","EuropeB","EuropeC","EuropeMigrant","EastA")
	levels(mydistdf2$pop2) <- c(levels(mydistdf2$pop2),"Migrant","EuropeA","EuropeB","EuropeC","EuropeMigrant","EastA")
	
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Alaska11"]	<- "Migrant"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Alaska11"]	<- "Migrant"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Canada8"]	<- "Migrant"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Alaska8"]	<- "Migrant"

	mydistdf2$pop1[as.character(mydistdf2$name1)=="Italy1"]		<- "EuropeA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Italy1"]		<- "EuropeA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Spain1"]		<- "EuropeA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Spain1"]		<- "EuropeA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Slovenia"]	<- "EuropeA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Slovenia"]	<- "EuropeA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Estonia1"]	<- "EuropeA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Estonia1"]	<- "EuropeA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Greece1"]	<- "EuropeA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Greece1"]	<- "EuropeA"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Italy1"]	<- "darkred"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Italy1"]	<- "darkred"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Spain1"]	<- "darkred"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Spain1"]	<- "darkred"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Slovenia"]	<- "darkred"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Slovenia"]	<- "darkred"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Estonia1"]	<- "darkred"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Estonia1"]	<- "darkred"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Greece1"]	<- "darkred"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Greece1"]	<- "darkred"

	mydistdf2$pop1[as.character(mydistdf2$name1)=="Rumania4"]	<- "EuropeB"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Rumania4"]	<- "EuropeB"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Rumania5"]	<- "EuropeB"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Rumania5"]	<- "EuropeB"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Slovakia1"]	<- "EuropeB"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Slovakia1"]	<- "EuropeB"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Norway7"]	<- "EuropeB"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Norway7"]	<- "EuropeB"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Ural3"]		<- "EuropeB"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Ural3"]		<- "EuropeB"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Rumania4"]	<- "yellow2"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Rumania4"]	<- "yellow2"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Rumania5"]	<- "yellow2"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Rumania5"]	<- "yellow2"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Slovakia1"]<- "yellow2"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Slovakia1"]<- "yellow2"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Norway7"]	<- "yellow2"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Norway7"]	<- "yellow2"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Ural3"]	<- "yellow2"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Ural3"]	<- "yellow2"

	mydistdf2$pop1[as.character(mydistdf2$name1)=="SouthNorway1"]	<- "EuropeC"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="SouthNorway1"]	<- "EuropeC"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="SouthNorway3"]	<- "EuropeC"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="SouthNorway3"]	<- "EuropeC"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="SouthNorway5"]	<- "EuropeC"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="SouthNorway5"]	<- "EuropeC"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="SouthNorway6"]	<- "EuropeC"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="SouthNorway6"]	<- "EuropeC"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="SouthNorway7"]	<- "EuropeC"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="SouthNorway7"]	<- "EuropeC"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Russia_Kola3"]	<- "EuropeC"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Russia_Kola3"]	<- "EuropeC"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Ural6"]			<- "EuropeC"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Ural6"]			<- "EuropeC"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="SouthNorway1"]	<- "gold3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="SouthNorway1"]	<- "gold3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="SouthNorway3"]	<- "gold3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="SouthNorway3"]	<- "gold3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="SouthNorway5"]	<- "gold3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="SouthNorway5"]	<- "gold3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="SouthNorway6"]	<- "gold3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="SouthNorway6"]	<- "gold3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="SouthNorway7"]	<- "gold3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="SouthNorway7"]	<- "gold3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Russia_Kola3"]	<- "gold3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Russia_Kola3"]	<- "gold3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Ural6"]		<- "gold3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Ural6"]		<- "gold3"	
	
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Finland2"]	<- "EuropeMigrant"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Finland2"]	<- "EuropeMigrant"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Kirkenes"]	<- "EuropeMigrant"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Kirkenes"]	<- "EuropeMigrant"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Norway3"]	<- "EuropeMigrant"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Norway3"]	<- "EuropeMigrant"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Norway4"]	<- "EuropeMigrant"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Norway4"]	<- "EuropeMigrant"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Ural5"]		<- "EuropeMigrant"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Ural5"]		<- "EuropeMigrant"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Finland2"]<- "orangered3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Finland2"]<- "orangered3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Kirkenes"]<- "orangered3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Kirkenes"]<- "orangered3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Norway3"]	<- "orangered3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Norway3"]	<- "orangered3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Norway4"]	<- "orangered3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Norway4"]	<- "orangered3"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Ural5"]	<- "orangered3"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Ural5"]	<- "orangered3"
	
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Estonia2"]		<- "EastA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Estonia2"]		<- "EastA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="FarEast7"]		<- "EastA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="FarEast7"]		<- "EastA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="Russia"]			<- "EastA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="Russia"]			<- "EastA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="CentralRussia3"]	<- "EastA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="CentralRussia3"]	<- "EastA"
	mydistdf2$pop1[as.character(mydistdf2$name1)=="CentralRussia4"]	<- "EastA"
	mydistdf2$pop2[as.character(mydistdf2$name2)=="CentralRussia4"]	<- "EastA"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Estonia2"]		<- "greenyellow"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Estonia2"]		<- "greenyellow"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="FarEast7"]		<- "greenyellow"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="FarEast7"]		<- "greenyellow"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="Russia"]			<- "greenyellow"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="Russia"]			<- "greenyellow"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="CentralRussia3"]	<- "greenyellow"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="CentralRussia3"]	<- "greenyellow"
	mydistdf2$popcol1[as.character(mydistdf2$name1)=="CentralRussia4"]	<- "greenyellow"
	mydistdf2$popcol2[as.character(mydistdf2$name2)=="CentralRussia4"]	<- "greenyellow"
	
	mydistdf2	<<- mydistdf2
	
	#mypairdf<- data.frame("pop1"=as.character(c("Westcoast","HudsonBay","Migrant","ABCcoast","CentreRus")),"pop2"=as.character(c("ABCcoast","Kamtchatka","Kamtchatka","ABCa","CentreRus2")))
	#mypairdf<- data.frame("pop1"=as.character(c("Westcoast","HudsonBay","Migrant","ABCcoast","Kamtchatka")),"pop2"=as.character(c("ABCcoast","Kamtchatka","Kamtchatka","ABCa","Westcoast")))
	#mypairdf<- data.frame("pop1"=as.character(c("Westcoast","ABCcoast","Migrant","ABCcoast","Kamtchatka")),"pop2"=as.character(c("ABCcoast","Kamtchatka","Kamtchatka","ABCa","Westcoast")))
	newworldpairs	<<- data.frame("pop1"=as.character(c("Westcoast","Migrant","ABCcoast")),"pop2"=as.character(c("ABCcoast","Kamtchatka","ABCa")))
	europepairs		<<- data.frame("pop1"=as.character(c("EuropeA","EuropeA","EuropeB")),"pop2"=as.character(c("EuropeB","EuropeC","EuropeC")))
	eurasiapairs	<<- data.frame("pop1"=as.character(c("EastA","EastA","EastA")),"pop2"=as.character(c("EuropeMigrant","EuropeA","EuropeB")))
	himalayapairs	<<- data.frame("pop1"=as.character(c("Himalaya","Himalaya","Himalaya")),"pop2"=as.character(c("EuropeA","EastA","MiddleEast")))
	dxyhisto(silent=FALSE,pairdf=newworldpairs,mydf=mydistdf2,export="pdf",plotname="Dxy_NewWorld",xmax=90000)
	dxyhisto(silent=FALSE,pairdf=europepairs,mydf=mydistdf2,export="pdf",plotname="Dxy_Europe",xmax=90000)
	dxyhisto(silent=FALSE,pairdf=eurasiapairs,mydf=mydistdf2,export="pdf",plotname="Dxy_Eurasia",xmax=90000)
	dxyhisto(silent=FALSE,pairdf=himalayapairs,mydf=mydistdf2,export="pdf",plotname="Dxy_Himalaya",xmax=300000,plotwidth=13)
	}


